<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[项目配置流程]]></title>
    <url>%2F2018%2F02%2F05%2F%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE%E6%B5%81%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[DATABASES配置1.创建虚拟环境 默认使用Python3.6 在cmder中输入mkvirtualenv your-virtualenv-name 。2.在pycharm中新建工程 选择工程存放的路径和指定你的虚拟环境。3.在tools中点击 run manage.py task，在 命令行中输入startapp your-app-name，为了方便管理，可以将你的app放在APPs中。4.为了在以后import方便可以将你的APPs mark成source路径，同时在setting中将APPs设置成根搜索路径。Django从请求到相应的完整流程 1.首先需要配置你的HTML页面，将你的HTML页面放在templates文件夹下，同时将你的css等静态文件放在static文件夹下。 2.根据你所要用到的数据库类型来进行数据库的连接配置，在settings中根据你自己的情况将123456DATABASES = &#123; &apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.sqlite3&apos;, &apos;NAME&apos;: os.path.join(BASE_DIR, &apos;db.sqlite3&apos;), &#125;&#125; 改为你的数据库类型，因为我用的是MySQL所以我的配置如下:123456789DATABASES = &#123; &apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;, &apos;NAME&apos;: &quot;Django&quot;, &apos;USER&apos;: &quot;root&quot;, &apos;PASSWORD&apos;: &quot;root&quot;, &apos;LOCALHOST&apos;: &quot;127.0.0.1&quot; &#125;&#125; 接着记得添加安装mysql的驱动mysqldb，在你的虚拟环境下1pip install mysql-python 在Windows下安装mysql驱动很容易出现错误，如果你安装的过程中出现了错误，就去传送门看一下具体的解决方案。当然，这里解决的只是Python2.x版本的。如果你是3.x版本的话，mysql-python就没有用了，解决方法就是： step:1 12#在你的虚拟环境下pip install pymysql step:2在你的pycharm工程下的__init__.py文件中添加下面的两条语句即可。 12import pymysqlpymysql.install_as_MySQLdb() 在配置完之后还要继续run manage.py task不报错就OK了。 3.生成Django需要用到的数据表123makemigrations#如果没有报错migrate 在生成表之后可以去Navicat查看。 4.运行你的项目debug你的Django项目，会出现如下信息：12345System check identified no issues (0 silenced).February 05, 2018 - 22:31:59Django version 2.0.2, using settings &apos;OLlearning.settings&apos;Starting development server at http://127.0.0.1:8000/Quit the server with CTRL-BREAK. 查看这个网址，会提示你你的Django可以工作啦！这个结果可能和你的不一样 ，因为这个还没没有配置URL。 TEMPLATES下的dir配置如果不配置templates的路径，那么会找不到我们的HTML文件。123456789101112131415TEMPLATES = [ &#123; &apos;BACKEND&apos;: &apos;django.template.backends.django.DjangoTemplates&apos;, &apos;DIRS&apos;: [], &apos;APP_DIRS&apos;: True, &apos;OPTIONS&apos;: &#123; &apos;context_processors&apos;: [ &apos;django.template.context_processors.debug&apos;, &apos;django.template.context_processors.request&apos;, &apos;django.contrib.auth.context_processors.auth&apos;, &apos;django.contrib.messages.context_processors.messages&apos;, ], &#125;, &#125;,] 需要将项目路径的根路径和templates做一个连接即可，如下：123456789101112131415TEMPLATES = [ &#123; &apos;BACKEND&apos;: &apos;django.template.backends.django.DjangoTemplates&apos;, &apos;DIRS&apos;: [os.path.join(BASE_DIR, &apos;templates&apos;)], &apos;APP_DIRS&apos;: True, &apos;OPTIONS&apos;: &#123; &apos;context_processors&apos;: [ &apos;django.template.context_processors.debug&apos;, &apos;django.template.context_processors.request&apos;, &apos;django.contrib.auth.context_processors.auth&apos;, &apos;django.contrib.messages.context_processors.messages&apos;, ], &#125;, &#125;,] 新建STATICFILES_DIRS如果不对静态文件的根路径进行配置，在加载HTML文件的时候，静态文件并不会起到作用。1STATIC_URL = &apos;/static/&apos; 这样为什么还找不到我们的静态文件？因为这里还是没有配置好我们的static文件的根路径是在哪儿里。1234STATIC_URL = &apos;/static/&apos;STATICFILES_DIRS = [ os.path.join(BASE_DIR, &apos;static&apos;)] 编写views.py这个在之后的文章中会详细的写。 配置URL这个在之后的文章中会详细的写。 至此，就是项目配置的大致流程。]]></content>
      <categories>
        <category>Django</category>
        <category>在线教育平台</category>
        <category>Djando 基础知识</category>
      </categories>
      <tags>
        <tag>Django</tag>
        <tag>后端开发</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[开发环境搭建]]></title>
    <url>%2F2018%2F02%2F02%2F%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[最近学习完了bobby老师的Django打造在线教育平台，正准备学习他的Django打造生鲜电商。就想把这段时间的学习心得和重要的知识点记录一下，因为版权的原因，这里只是一些学习笔记，不会有视频资源和相关的源码。希望有兴趣的同学可以去慕课网_bobby老师的课程下学习。话不多说，开始吧！ 安装Pycharmpycharm一定要选专业版 安装MySQL和Navicatmysql安装选的是5.7.21解压免安装版，记得配置环境变量方便使用1D:\mysql-5.7.21-winx64\mysql-5.7.21-winx64\bin 这是我的安装路径，将他添加到环境变量path中就行，然后在你的cmder中键入1net start mysql 看你的数据库是否配置成功，若显示服务已启动则表示成功。Navicat同理，都有破解版。 连接MySQL遇到的问题在安装完mysql利用Navicat创建新的mysql连接的时候，可能会出现下面这种情况： 1045-Access denied for user ‘root’@’localhost’（using password:YES） 这个错误是输入密码错误的，怎么改呢？按照如下步骤执行：1.找到配置文件my.ini （我的电脑的路径：D:\mysql-5.7.21-winx64\mysql-5.7.21-winx64\bin） ，然后将其打开，可以选择用记事本打开.2.打开后，Ctrl+F 搜索[mysqld]。找到后，在[mysqld]下面添加skip-grant-tables，保存退出。PS：若提示不让保存时，可以将该文件剪切到桌面，更改保存后再复制到mySQL目录下3.保存后重启mySQL4.然后运行cmd然后就可以执行mysql命令了。输入mysql -u root -p就可以不用密码登录了，出现password：的时候直接回车可以进入，到此步骤成功连接到mysql数据库了。5.修改密码依次执行如下命令：(1)use mysql；(2) UPDATE user SET Password=PASSWORD(‘newpassword’) where USER=’root’; 因为版本的不同，5.7以上的版本会显示1ERROR 1054 (42S22): Unknown column &apos;Password&apos; in &apos;field list&apos; 是因为mysql数据库下已经没有password这个字段了，password字段改成了authentication_string，所以只要这么写就可以啦！1update mysql.user set authentication_string=password(&apos;root&apos;) where user=&apos;root&apos; (3)flush privileges;(4)quitBye;6.改好之后，再修改一下my.ini这个文件，把我们刚才加入的”skip-grant-tables”这行删除，保存退出再重启mysql服务就可以了。7.你以为错误就这样结束了？不存在的，在进行Navicat进行连接的时候会出现一个新的错误，那就是1MySQL错误号码1862：your password has expired 开心不？？？解决起来也很简单，跟随我魔鬼的步伐！12345678#开启mysql服务net start mysql#登入你的mysqlmysql -uroot -p#输入你的密码[*******]#再改一下密码SET PASSWORD = PASSWORD(&apos;root&apos;); 大功告成！这下navicat就能连接到mysql啦！ 安装Python2.7和3.6然后记得安装Python2.7和3.6的开发环境最后记得安装Python的虚拟环境virtualenv。这里说一下virtualenv的优点：1.使不同应用开发环境独立2.环境升级不影响其他应用，也不会影响全局的Python环境3.可以防止系统中出现包混乱和版本的冲突但是virtualenv的管理不太方便就需要另一款开发库virtualenvwrapper-win。123pip install virtualenvwrapper-winmkvirtualenv yourenvnamemkvirtualenv --python=your-python3.6-install-path\python.exe yourenvname 如果你想改变你存放虚拟环境的文件夹，你可以在环境变量中新建一个系统变量叫做WORKON_HOME 然后将你希望的ENVS文件夹所在的路径加进去，然后重启一下你的CMD或者CMDER就行了。]]></content>
      <categories>
        <category>Django</category>
        <category>在线教育平台</category>
      </categories>
      <tags>
        <tag>Django</tag>
        <tag>后端开发</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于hexo的逼格配置]]></title>
    <url>%2F2018%2F01%2F31%2F%E5%85%B3%E4%BA%8Ehexo%E7%9A%84%E9%80%BC%E6%A0%BC%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[在基础的配置之后，就想让他更酷炫一点，喏，这个就能满足你next个性化配置]]></content>
      <categories>
        <category>hexo搭建博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[永远年轻，永远热泪盈眶]]></title>
    <url>%2F2018%2F01%2F31%2F%E8%87%B4%E8%87%AA%E5%B7%B1%2F</url>
    <content type="text"><![CDATA[&ensp;&ensp;”Japhy,” I said out loud, “I don’t know when we’ll meet again or what’ll happen in the future,but Desolation, Desolation, I owe so much to Desolation. Thank you for guiding me to the place I learned all. Now comes the sadness of coming back to cities and I’ve grown two months older and there’s all that humanity of bars and burlesque shows and gritty love, all upsidedown in the void God bless them, but Japhy you and me forever know, O ever youthful, O ever weeping.” --《The Dharm Bums》]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>干下这杯酒</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[文章插入图片]]></title>
    <url>%2F2018%2F01%2F29%2F%E6%96%87%E7%AB%A0%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%2F</url>
    <content type="text"><![CDATA[图床：完成图片的插入，这种网站就被成为图床。当博文中有图片时，若是少量图片，可以直接把图片存放在source文件夹。或者把主页配置文件_config.yml 里的post_asset_folder:这个选项设置为true，在你的hexo目录下执行这样一句话npm install hexo-asset-image –save，这是下载安装一个可以上传本地图片的插件，等待一小段时间后，再运行hexo n “xxxx”来生成md博文时，/source/_posts文件夹内除了xxxx.md文件还有一个同名的文件夹，最后在xxxx.md中想引入图片时，先把图片复制到xxxx这个文件夹中，然后只需要在xxxx.md中按照markdown的格式引入图片： ![你想输入的替代文字](xxxx/图片名.jpg) 最后检查一下，hexo g生成页面后，进入public\2018\01\29\index.html文件中查看相关字段，可以发现，html标签内的语句是: &lt;img src=&quot;2018/01/29/xxxx/图片名.jpg&quot;&gt; 而不是&lt;img src=”xxxx/图片名.jpg&gt;。这很重要，关乎你的网页是否可以真正加载你想插入的图片。但这显然不合理的，因为图片会占据大量的存储的空间，加载的时候相对缓慢 ，这时考虑把博文里的图片上传到某一网站，然后获得外部链接。使用Markdown语法: ![图片信息](外部链接)]]></content>
      <categories>
        <category>hexo搭建博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>图床</tag>
      </tags>
  </entry>
</search>
